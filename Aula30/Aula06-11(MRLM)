

y=c(16.5,14,6,10,3.5)
x1=c(1,3.5,4,7.5,9)
x2=c(2,3,4,5,6)

# a. Ajustar o MRLM
m=lm(y~x1+x2)
summary(m)

#B~^ = [34  4  -11]'

#-=-=-

#b. Construir a matriz X~
x = cbind(1,x1,x2);x

#-=-=-

#c. bc = (x'x)^-1 * x' * y
xt = t(x);xt #x'
xtx = xt %*% x; xtx #(x'x)
xtx_i = solve(xtx);xtx_i #(x'x)^-1
xty= xt %*% y;xty #x'y

#bc = xtx_i %*%xty = solve(xtx) %*% xty
bc = xtx_i %*% xty;bc

X = model.matrix(m);X

#-=-=-

#d. Testes de IC p/ Bj, j=0,1,2
m
anova(m)
summary(m)
p=3

n=length(y);n
In = diag(n);In
H = x %*% xtx_i %*% xt;H
QMres = (t(y) %*% (In - H) %*% y)/(n-p);QMres #t(y): y transposto

mC = xtx_i #mC: (x'x)-^1
cjj = diag(mC);cjj

To = m$coe[1]/sqrt(QMres*cjj);To

To = 34/sqrt(1.25*7.8);To

pvalor=2*pt(10.889,2,low=FALSE);pvalor

std_error = sqrt(QMres*7.8);std_error


#-=-=-=-=-=-=-=-
#01/11
alfa=0.05
confint(m)
b=m$coe;b

a=anova(m);a
names(a)
a$"Mean Sq"
s2 = a$"Mean Sq"[3];s2 #estimativa de sigma2
ep = sqrt(s2*cjj);ep #mesma coisa que std_error já definido anteriormente

li=b - qt(1-alfa/2,n-p) * std_error;li
ls=b + qt(1-alfa/2,n-p) * std_error;ls
cbind(li,ls)

#-=-=-=-=-=-===-=-=-=-=-=-=-=-=-=-

m12 = lm(y~x1+x2)
anova(m12)
m1 = lm(y~x1)
m2 = lm(y~x2)
anova(m1); anova(m2)
xzao = model.matrix(m12)
mxzao = lm(y~xzao[,-1])
anova(mxzao)


install.packages("rgl")
library(rgl)

plot3d(x1, x2, y, pch = 19, size = 10, col = "red", xlim = c(0, 10), ylim = c(0, 8),
       zlim = c(0, 20))

planes3d(4, -11, -1, 34, alpha = 0.5)

anova(m12)

# SQreg

J = matrix(1, length(y), length(y)); J #J é Jn

SQreg = t(y) %*% (H - J/n) %*% y ; SQreg






